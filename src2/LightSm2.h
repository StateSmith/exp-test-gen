// Autogenerated with StateSmith 0.9.13-alpha-tracking-expander-2+646866c3595d5ab39a706ef48737543ce6e334b2.
// Algorithm: Balanced1. See https://github.com/StateSmith/StateSmith/wiki/Algorithms

extern void println(char const * str);
extern void light_red();
extern void light_blue();
extern void light_yellow();
#pragma once
#include <stdint.h>

typedef enum LightSm2_EventId
{
    LightSm2_EventId_DIM = 0,
    LightSm2_EventId_INCREASE = 1,
    LightSm2_EventId_OFF = 2,
    LightSm2_EventId_RESUME = 3,
} LightSm2_EventId;

enum
{
    LightSm2_EventIdCount = 4
};

typedef enum LightSm2_StateId
{
    LightSm2_StateId_ROOT = 0,
    LightSm2_StateId_OFF = 1,
    LightSm2_StateId_ON_GROUP = 2,
    LightSm2_StateId_ON_HOT = 3,
    LightSm2_StateId_ON1 = 4,
    LightSm2_StateId_ON2 = 5,
} LightSm2_StateId;

enum
{
    LightSm2_StateIdCount = 6
};

typedef enum LightSm2_ON_GROUP_HistoryId
{
    LightSm2_ON_GROUP_HistoryId_ON1 = 0, // default transition
    LightSm2_ON_GROUP_HistoryId_ON_HOT = 1,
    LightSm2_ON_GROUP_HistoryId_ON2 = 2,
} LightSm2_ON_GROUP_HistoryId;


// Generated state machine
// forward declaration
typedef struct LightSm2 LightSm2;

// State machine variables. Can be used for inputs, outputs, user variables...
typedef struct LightSm2_Vars
{
    LightSm2_ON_GROUP_HistoryId ON_GROUP_history;
    int count = 0; // variable for state machine
} LightSm2_Vars;



// event handler type
typedef void (*LightSm2_Func)(LightSm2* sm);

// State machine constructor. Must be called before start or dispatch event functions. Not thread safe.
void LightSm2_ctor(LightSm2* sm);

// Starts the state machine. Must be called before dispatching events. Not thread safe.
void LightSm2_start(LightSm2* sm);

// Dispatches an event to the state machine. Not thread safe.
void LightSm2_dispatch_event(LightSm2* sm, LightSm2_EventId event_id);

// Thread safe.
char const * LightSm2_state_id_to_string(LightSm2_StateId id);

// Thread safe.
char const * LightSm2_event_id_to_string(LightSm2_EventId id);

// Generated state machine
struct LightSm2
{
    // Used internally by state machine. Feel free to inspect, but don't modify.
    LightSm2_StateId state_id;
    
    // Used internally by state machine. Don't modify.
    LightSm2_Func ancestor_event_handler;
    
    // Used internally by state machine. Don't modify.
    LightSm2_Func current_event_handlers[LightSm2_EventIdCount];
    
    // Used internally by state machine. Don't modify.
    LightSm2_Func current_state_exit_handler;
    
    // Variables. Can be used for inputs, outputs, user variables...
    LightSm2_Vars vars;
};

